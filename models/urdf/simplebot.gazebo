<?xml version="1.0" ?>
<robot name="simplebot" xmlns:xacro="http://www.ros.org/wiki/xacro" >

<xacro:property name="body_color" value="Gazebo/White" />
<xacro:property name="wheel_color" value="Gazebo/Blue" />

<gazebo>
  <plugin name="control" filename="libgazebo_ros2_control.so"/>
</gazebo>


<!-- Differential drive plugin for gazebo -->
<gazebo>
  <plugin name='diff_drive' filename='libgazebo_ros_diff_drive.so'>
    <ros><!-- <namespace>/demo</namespace> --></ros>

    <!-- wheels -->
    <left_joint>left_wheel_joint</left_joint>
    <right_joint>right_wheel_joint</right_joint>

    <!-- kinematics -->
    <wheel_separation>0.191</wheel_separation>
    <wheel_diameter>0.06</wheel_diameter>

    <!-- limits -->
    <max_wheel_torque>20</max_wheel_torque>
    <max_wheel_acceleration>1.0</max_wheel_acceleration>

    <!-- output -->
    <publish_odom>true</publish_odom>
    <!--publish_odom_tf>true</publish_odom_tf-->
    <!--publish_wheel_tf>true</publish_wheel_tf-->

    <odometry_frame>odom</odometry_frame>
    <robot_base_frame>base_link</robot_base_frame>
</plugin>
</gazebo>
<!-- End of Differential drive plugin for gazebo -->

<!-- start of camera plugin -->
  <!--gazebo reference="camera">
    <sensor type="camera" name="camera">
      <update_rate>30</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo-->
<!-- end of camera plugin -->


<!-- Laser Scan Plugin for Gazebo -->
<gazebo reference="lidar_1">
  <sensor name="ydlidar" type="ray">
    <always_on>true</always_on>
    <visualize>false</visualize> <!-- can be changed to see visualization -->
    <update_rate>10</update_rate>
      <ray>
        <scan>
	  <horizontal>
	    <samples>720</samples>
	    <resolution>1</resolution> <!-- can be changed, lower means less laser points -->
	    <min_angle>-3.14</min_angle>
	    <max_angle>3.14</max_angle>
	  </horizontal>
	</scan>
	<range>
	  <min>0.1</min> <!-- distances of the laser in m -->
	  <max>12.0</max>
	  <resolution>0.015000</resolution>
	</range>
	  <noise>
	    <type>gaussian</type>
	    <mean>0.0</mean>
	    <stddev>0.01</stddev>
	  </noise>
	</ray>
	<plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
	  <ros>
	    <remapping>~/out:=scan</remapping>
	  </ros>
	  <output_type>sensor_msgs/LaserScan</output_type>
	  <frame_name>lidar_1</frame_name>
        </plugin>
  </sensor>
</gazebo>
<!-- End of Laser Scan for Gazebo -->


<gazebo reference="base_link">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
  <gravity>true</gravity>
</gazebo>

<!-- high mu1 and/or mu2 is interpreted as less fricction, lower the less friction -->

<gazebo reference="right_wheel_1">
  <material>${wheel_color}</material>
  <mu1>1</mu1> <!-- change this friction parameters to improve simulation -->
  <mu2>1</mu2> <!-- change this friction parameters to improve simulation -->
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="left_wheel_1">
  <material>${wheel_color}</material>
  <mu1>1</mu1> <!-- change this friction parameters to improve simulation -->
  <mu2>1</mu2> <!-- change this friction parameters to improve simulation -->
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="caster_wheel_1">
  <material>${body_color}</material>
  <mu1>0.02</mu1> <!-- change this friction parameters to improve simulation -->
  <mu2>0.02</mu2> <!-- change this friction parameters to improve simulation -->
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="lidar_1">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

</robot>
